import { CreateIndexFormatter } from '../formatters/create-index-formatter';
import { DropIndexFormatter } from '../formatters/drop-index-formatter';
import { NowFormatter } from '../formatters/now';
import { NotifyFormatter } from '../formatters/notify-formatter';
import { ListenFormatter } from '../formatters/listen-formatter';
import { FieldFormatter } from '../../relational/sql/formatter/field';
import { NotEqualFormatter } from '../../relational/sql/formatter/not-equal';
import {
  AlterTableAddColumnFormatter,
  AlterTableAddForeignKeyFormatter,
  AlterTableDropColumnFormatter,
  AlterTableDropConstraintFormatter,
} from '../../relational/sql/formatter/alter-table';
import { ConcatFormatter } from '../../relational/sql/formatter/concat';
import { SubSelectFormatter } from '../../relational/sql/formatter/sub-select';
import { Formatter } from '../../relational/sql/formatter/formatter';
import { AvgFormatter } from '../../relational/sql/formatter/avg';
import { CreateTableFormatter } from '../../relational/sql/formatter/create-table';
import { EqualFormatter } from '../../relational/sql/formatter/equal';
import { GreaterThanFormatter } from '../../relational/sql/formatter/greater-than';
import { UpdateFormatter } from '../../relational/sql/formatter/update';
import { SumFormatter } from '../../relational/sql/formatter/sum';
import { JoinFormatter } from '../../relational/sql/formatter/join';
import { MinFormatter } from '../../relational/sql/formatter/min';
import { DeleteFormatter } from '../../relational/sql/formatter/delete';
import { CreateSchemaFormatter } from '../../relational/sql/formatter/create-schema';
import { MaxFormatter } from '../../relational/sql/formatter/max';
import { LowerEqualThanFormatter } from '../../relational/sql/formatter/lower-equal-than';
import { CreateViewFormatter } from '../../relational/sql/formatter/create-view';
import { GreaterEqualThanFormatter } from '../../relational/sql/formatter/greater-equal-than';
import { BetweenFormatter } from '../../relational/sql/formatter/between';
import { CountFormatter } from '../../relational/sql/formatter/count';
import { ExistsFormatter } from '../../relational/sql/formatter/exists';
import { LockTableFormatter } from '../../relational/sql/formatter/lock-table';
import { NotInFormatter } from '../../relational/sql/formatter/not-in';
import { OrderByFormatter } from '../../relational/sql/formatter/order-by';
import { SelectFormatter } from '../../relational/sql/formatter/select';
import { IsNullFormatter } from '../../relational/sql/formatter/is-null';
import { InsertFormatter } from '../../relational/sql/formatter/insert';
import { LikeFormatter } from '../../relational/sql/formatter/like';
import { LowerThanFormatter } from '../../relational/sql/formatter/lower-than';
import { AndFormatter } from '../../relational/sql/formatter/and';
import { TableFormatter } from '../../relational/sql/formatter/table';
import { OrFormatter } from '../../relational/sql/formatter/or';
import { NotBetweenFormatter } from '../../relational/sql/formatter/not-between';
import { AllFormatter } from '../../relational/sql/formatter/all';
import { InFormatter } from '../../relational/sql/formatter/in';
import { DropTableFormatter } from '../../relational/sql/formatter/drop-table';
import { ValueFormatter } from '../../relational/sql/formatter/value';
import { DropViewFormatter } from '../../relational/sql/formatter/drop-view';
import { AliasFormatter } from '../../relational/sql/formatter/alias';

export const postgresFormatter = new Formatter();
postgresFormatter.add(new AllFormatter());
postgresFormatter.add(new UpdateFormatter());
postgresFormatter.add(new NotEqualFormatter());
postgresFormatter.add(new MaxFormatter());
postgresFormatter.add(new SelectFormatter());
postgresFormatter.add(new SubSelectFormatter());
postgresFormatter.add(new ValueFormatter());
postgresFormatter.add(new SumFormatter());
postgresFormatter.add(new TableFormatter());
postgresFormatter.add(new NotInFormatter());
postgresFormatter.add(new JoinFormatter());
postgresFormatter.add(new AvgFormatter());
postgresFormatter.add(new MinFormatter());
postgresFormatter.add(new IsNullFormatter());
postgresFormatter.add(new FieldFormatter());
postgresFormatter.add(new BetweenFormatter());
postgresFormatter.add(new CountFormatter());
postgresFormatter.add(new OrderByFormatter());
postgresFormatter.add(new EqualFormatter());
postgresFormatter.add(new OrFormatter());
postgresFormatter.add(new AndFormatter());
postgresFormatter.add(new InFormatter());
postgresFormatter.add(new GreaterThanFormatter());
postgresFormatter.add(new GreaterEqualThanFormatter());
postgresFormatter.add(new CreateViewFormatter());
postgresFormatter.add(new DropViewFormatter());
postgresFormatter.add(new LowerThanFormatter());
postgresFormatter.add(new LowerEqualThanFormatter());
postgresFormatter.add(new NowFormatter());
postgresFormatter.add(new ExistsFormatter());
postgresFormatter.add(new AliasFormatter());
postgresFormatter.add(new NotBetweenFormatter());
postgresFormatter.add(new DeleteFormatter());
postgresFormatter.add(new LikeFormatter());
postgresFormatter.add(new ConcatFormatter());
postgresFormatter.add(new LockTableFormatter());
postgresFormatter.add(new DropTableFormatter());
postgresFormatter.add(new InsertFormatter());
postgresFormatter.add(new CreateSchemaFormatter());
postgresFormatter.add(new CreateTableFormatter());
postgresFormatter.add(new AlterTableAddColumnFormatter());
postgresFormatter.add(new AlterTableAddForeignKeyFormatter());
postgresFormatter.add(new AlterTableDropColumnFormatter());
postgresFormatter.add(new AlterTableDropConstraintFormatter());
postgresFormatter.add(new CreateIndexFormatter());
postgresFormatter.add(new DropIndexFormatter());
postgresFormatter.add(new NotifyFormatter());
postgresFormatter.add(new ListenFormatter());
